-- Create Users Table
CREATE TABLE Users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    role VARCHAR(20) NOT NULL CHECK (role IN ('admin', 'warehouse_keeper', 'manager', 'assigned_user')),
    full_name VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Categories Table
CREATE TABLE Categories (
    category_id SERIAL PRIMARY KEY,
    category_name VARCHAR(100) NOT NULL,
    parent_category_id INT REFERENCES Categories(category_id) ON DELETE CASCADE,
    CONSTRAINT unique_category_name_parent UNIQUE (category_name, parent_category_id)
);

-- Create Products Table
CREATE TABLE Products (
    product_id SERIAL PRIMARY KEY,
    product_code VARCHAR(50) UNIQUE NOT NULL,
    product_name VARCHAR(100) NOT NULL,
    category_id INT REFERENCES Categories(category_id) ON DELETE CASCADE,
    specs JSONB,
    description VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Suppliers Table
CREATE TABLE Suppliers (
    supplier_id SERIAL PRIMARY KEY,
    supplier_name VARCHAR(100) NOT NULL,
    supplier_type VARCHAR(20) NOT NULL CHECK (supplier_type IN ('local', 'worldwide', 'internal')),
    contact_info VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Inventory Table
CREATE TABLE Inventory (
    inventory_id SERIAL PRIMARY KEY,
    product_id INT REFERENCES Products(product_id) ON DELETE CASCADE,
    serial_number VARCHAR(100) UNIQUE,
    supplier_id INT REFERENCES Suppliers(supplier_id) ON DELETE CASCADE,
    received_date DATE NOT NULL,
    reference_number VARCHAR(100) NOT NULL,
    status VARCHAR(20) NOT NULL CHECK (status IN ('available', 'assigned', 'used_in_manufacturing', 'destroyed', 'decomposed')),
    assigned_user_id INT REFERENCES Users(user_id) ON DELETE SET NULL,
    assigned_date DATE,
    manufactured_product_id INT REFERENCES Inventory(inventory_id) ON DELETE SET NULL,
    decomposed_date DATE,
    destroyed_date DATE,
    manufactured_date DATE,
    notes VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT chk_assigned_date CHECK ((assigned_user_id IS NOT NULL AND assigned_date IS NOT NULL) OR (assigned_user_id IS NULL AND assigned_date IS NULL))
);

-- Create InternalEntities Table
CREATE TABLE InternalEntities (
    internal_entity_id SERIAL PRIMARY KEY,
    entity_name VARCHAR(100) NOT NULL,
    entity_info VARCHAR(255)
);

-- Create UserEntities Table
CREATE TABLE UserEntities (
    user_entity_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES Users(user_id) ON DELETE CASCADE,
    internal_entity_id INT REFERENCES InternalEntities(internal_entity_id) ON DELETE CASCADE,
    start_date DATE NOT NULL,
    end_date DATE,
    CONSTRAINT unique_user_entity UNIQUE (user_id, internal_entity_id)
);

-- Create Trigger Function
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

--Trigger for inventory
CREATE TRIGGER update_inventory_updated_at
BEFORE UPDATE ON Inventory
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column();










Summary of the Schema
1. Users Table
Stores information about system users (Admins, Warehouse Keepers, Managers, and Assigned Users).

Includes role enforcement using a CHECK constraint.

Tracks creation time with created_at.

2. Categories Table
Manages hierarchical categories and subcategories.

Ensures unique category names under the same parent using a UNIQUE constraint.

3. Products Table
Stores product information, including a unique product_code.

Uses JSONB for flexible product specifications.

Includes a description column for additional product details.

Tracks creation time with created_at.

4. Suppliers Table
Stores supplier information, including type (local, worldwide, internal).

Includes contact_info for supplier details.

Tracks creation time with created_at.

5. Inventory Table
Tracks product inventory, including serial numbers and status.

Links products to suppliers and assigned users.

Includes assigned_date to track when a product was assigned to a user.

Tracks manufacturing, decomposition, and destruction dates.

Includes a notes column for additional information.

Tracks creation and update times with created_at and updated_at.

Uses a trigger to automatically update updated_at on row updates.

6. InternalEntities Table
Stores information about internal entities.

Includes entity_info for additional details.

7. UserEntities Table
Links users to internal entities with a duration (start and end dates).

Ensures unique user-entity assignments using a UNIQUE constraint.